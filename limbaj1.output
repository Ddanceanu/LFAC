Terminals unused in grammar

    CONST
    VOID
    RETURN
    START
    END
    AND
    OR


Rules useless in parser due to conflicts

   61 cfv: ε


State 0 conflicts: 2 shift/reduce
State 17 conflicts: 2 shift/reduce
State 18 conflicts: 2 shift/reduce
State 19 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: cfv main '(' ')' '{' bloc_instr '}'

    2 main: type ID

    3 type: INT
    4     | FLOAT

    5 array: type ID '[' VAL ']'

    6 bloc_instr: if
    7           | while
    8           | for
    9           | afirmatie ';'
   10           | if bloc_instr
   11           | while bloc_instr
   12           | for bloc_instr
   13           | afirmatie ';' bloc_instr
   14           | TYPEOF '(' ID ')' ';'
   15           | EVAL '(' ID ')' ';'

   16 $@1: ε

   17 bloc_instr: TYPEOF '(' ID ')' ';' $@1 bloc_instr

   18 $@2: ε

   19 bloc_instr: EVAL '(' ID ')' ';' $@2 bloc_instr

   20 if: IF '(' conditie ')' '{' bloc_instr '}'
   21   | IF '(' conditie ')' '{' bloc_instr '}' ELSE '{' bloc_instr '}'

   22 while: WHILE '(' conditie ')' '{' bloc_instr '}'

   23 for: FOR '(' arg1 ';' arg2 ';' arg3 ')' '{' bloc_instr '}'

   24 arg1: type ID ASSIGN value
   25     | ID ASSIGN value

   26 arg2: conditie

   27 arg3: ID INC
   28     | ID DEC
   29     | INC ID
   30     | DEC ID

   31 conditie: value comparatie value

   32 value: VAL
   33      | FLOAT_VAL
   34      | ID

   35 comparatie: LT
   36           | GT
   37           | LE
   38           | GE
   39           | EQ
   40           | NE

   41 expr: value
   42     | expr ADD expr
   43     | expr SUB expr
   44     | expr MUL expr
   45     | expr DIV expr

   46 afirmatie: type ID ASSIGN value
   47          | CHAR ID ASSIGN CHARACTER
   48          | STR ID ASSIGN STRING
   49          | type ID
   50          | CHAR ID
   51          | STR ID
   52          | BOOL ID ASSIGN BOOL_VAL
   53          | BOOL ID
   54          | array
   55          | ID ASSIGN expr
   56          | ID comparatie expr
   57          | arg3

   58 cfv: clasa cfv
   59    | functie cfv
   60    | var_glob cfv
   61    | ε

   62 clasa: CLASS ID '{' bloc_clasa '}' ';'

   63 functie: FUNCTION ID '(' ')' '{' bloc_functie '}'
   64        | FUNCTION ID '(' param ')' '{' bloc_functie '}'

   65 param: type ID ',' param
   66      | type

   67 var_glob: afirmatie

   68 bloc_clasa: bloc_instr

   69 bloc_functie: bloc_instr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 14 15 17 19 20 21 22 23 63 64
    ')' (41) 1 14 15 17 19 20 21 22 23 63 64
    ',' (44) 65
    ';' (59) 9 13 14 15 17 19 23 62
    '[' (91) 5
    ']' (93) 5
    '{' (123) 1 20 21 22 23 62 63 64
    '}' (125) 1 20 21 22 23 62 63 64
    error (256)
    ID <strval> (258) 2 5 14 15 17 19 24 25 27 28 29 30 34 46 47 48 49 50 51 52 53 55 56 62 63 64 65
    INT <strval> (259) 3
    FLOAT <strval> (260) 4
    STR <strval> (261) 48 51
    STRING <strval> (262) 48
    CHARACTER <strval> (263) 47
    VAL <strval> (264) 5 32
    CHAR <charval> (265) 47 50
    FLOAT_VAL (266) 33
    BOOL_VAL (267) 52
    BOOL (268) 52 53
    CONST (269)
    VOID (270)
    RETURN (271)
    START (272)
    END (273)
    EVAL (274) 15 19
    TYPEOF (275) 14 17
    IF (276) 20 21
    ELSE (277) 21
    FOR (278) 23
    WHILE (279) 22
    FUNCTION (280) 63 64
    CLASS (281) 62
    ASSIGN (282) 24 25 46 47 48 52 55
    LT (283) 35
    GT (284) 36
    LE (285) 37
    GE (286) 38
    EQ (287) 39
    NE (288) 40
    ADD (289) 42
    SUB (290) 43
    MUL (291) 44
    DIV (292) 45
    AND (293)
    OR (294)
    INC (295) 27 29
    DEC (296) 28 30


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    main (52)
        on left: 2
        on right: 1
    type (53)
        on left: 3 4
        on right: 2 5 24 46 49 65 66
    array (54)
        on left: 5
        on right: 54
    bloc_instr (55)
        on left: 6 7 8 9 10 11 12 13 14 15 17 19
        on right: 1 10 11 12 13 17 19 20 21 22 23 68 69
    $@1 (56)
        on left: 16
        on right: 17
    $@2 (57)
        on left: 18
        on right: 19
    if (58)
        on left: 20 21
        on right: 6 10
    while (59)
        on left: 22
        on right: 7 11
    for (60)
        on left: 23
        on right: 8 12
    arg1 (61)
        on left: 24 25
        on right: 23
    arg2 (62)
        on left: 26
        on right: 23
    arg3 (63)
        on left: 27 28 29 30
        on right: 23 57
    conditie (64)
        on left: 31
        on right: 20 21 22 26
    value <strval> (65)
        on left: 32 33 34
        on right: 24 25 31 41 46
    comparatie (66)
        on left: 35 36 37 38 39 40
        on right: 31 56
    expr <strval> (67)
        on left: 41 42 43 44 45
        on right: 42 43 44 45 55 56
    afirmatie (68)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57
        on right: 9 13 67
    cfv (69)
        on left: 58 59 60 61
        on right: 1 58 59 60
    clasa (70)
        on left: 62
        on right: 58
    functie (71)
        on left: 63 64
        on right: 59
    param (72)
        on left: 65 66
        on right: 64 65
    var_glob (73)
        on left: 67
        on right: 60
    bloc_clasa (74)
        on left: 68
        on right: 62
    bloc_functie (75)
        on left: 69
        on right: 63 64


State 0

    0 $accept: • program $end

    ID        shift, and go to state 1
    INT       shift, and go to state 2
    FLOAT     shift, and go to state 3
    STR       shift, and go to state 4
    CHAR      shift, and go to state 5
    BOOL      shift, and go to state 6
    FUNCTION  shift, and go to state 7
    CLASS     shift, and go to state 8
    INC       shift, and go to state 9
    DEC       shift, and go to state 10

    INT    [reduce using rule 61 (cfv)]
    FLOAT  [reduce using rule 61 (cfv)]

    program    go to state 11
    type       go to state 12
    array      go to state 13
    arg3       go to state 14
    afirmatie  go to state 15
    cfv        go to state 16
    clasa      go to state 17
    functie    go to state 18
    var_glob   go to state 19


State 1

   27 arg3: ID • INC
   28     | ID • DEC
   55 afirmatie: ID • ASSIGN expr
   56          | ID • comparatie expr

    ASSIGN  shift, and go to state 20
    LT      shift, and go to state 21
    GT      shift, and go to state 22
    LE      shift, and go to state 23
    GE      shift, and go to state 24
    EQ      shift, and go to state 25
    NE      shift, and go to state 26
    INC     shift, and go to state 27
    DEC     shift, and go to state 28

    comparatie  go to state 29


State 2

    3 type: INT •

    $default  reduce using rule 3 (type)


State 3

    4 type: FLOAT •

    $default  reduce using rule 4 (type)


State 4

   48 afirmatie: STR • ID ASSIGN STRING
   51          | STR • ID

    ID  shift, and go to state 30


State 5

   47 afirmatie: CHAR • ID ASSIGN CHARACTER
   50          | CHAR • ID

    ID  shift, and go to state 31


State 6

   52 afirmatie: BOOL • ID ASSIGN BOOL_VAL
   53          | BOOL • ID

    ID  shift, and go to state 32


State 7

   63 functie: FUNCTION • ID '(' ')' '{' bloc_functie '}'
   64        | FUNCTION • ID '(' param ')' '{' bloc_functie '}'

    ID  shift, and go to state 33


State 8

   62 clasa: CLASS • ID '{' bloc_clasa '}' ';'

    ID  shift, and go to state 34


State 9

   29 arg3: INC • ID

    ID  shift, and go to state 35


State 10

   30 arg3: DEC • ID

    ID  shift, and go to state 36


State 11

    0 $accept: program • $end

    $end  shift, and go to state 37


State 12

    5 array: type • ID '[' VAL ']'
   46 afirmatie: type • ID ASSIGN value
   49          | type • ID

    ID  shift, and go to state 38


State 13

   54 afirmatie: array •

    $default  reduce using rule 54 (afirmatie)


State 14

   57 afirmatie: arg3 •

    $default  reduce using rule 57 (afirmatie)


State 15

   67 var_glob: afirmatie •

    $default  reduce using rule 67 (var_glob)


State 16

    1 program: cfv • main '(' ')' '{' bloc_instr '}'

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3

    main  go to state 39
    type  go to state 40


State 17

   58 cfv: clasa • cfv

    ID        shift, and go to state 1
    INT       shift, and go to state 2
    FLOAT     shift, and go to state 3
    STR       shift, and go to state 4
    CHAR      shift, and go to state 5
    BOOL      shift, and go to state 6
    FUNCTION  shift, and go to state 7
    CLASS     shift, and go to state 8
    INC       shift, and go to state 9
    DEC       shift, and go to state 10

    INT    [reduce using rule 61 (cfv)]
    FLOAT  [reduce using rule 61 (cfv)]

    type       go to state 12
    array      go to state 13
    arg3       go to state 14
    afirmatie  go to state 15
    cfv        go to state 41
    clasa      go to state 17
    functie    go to state 18
    var_glob   go to state 19


State 18

   59 cfv: functie • cfv

    ID        shift, and go to state 1
    INT       shift, and go to state 2
    FLOAT     shift, and go to state 3
    STR       shift, and go to state 4
    CHAR      shift, and go to state 5
    BOOL      shift, and go to state 6
    FUNCTION  shift, and go to state 7
    CLASS     shift, and go to state 8
    INC       shift, and go to state 9
    DEC       shift, and go to state 10

    INT    [reduce using rule 61 (cfv)]
    FLOAT  [reduce using rule 61 (cfv)]

    type       go to state 12
    array      go to state 13
    arg3       go to state 14
    afirmatie  go to state 15
    cfv        go to state 42
    clasa      go to state 17
    functie    go to state 18
    var_glob   go to state 19


State 19

   60 cfv: var_glob • cfv

    ID        shift, and go to state 1
    INT       shift, and go to state 2
    FLOAT     shift, and go to state 3
    STR       shift, and go to state 4
    CHAR      shift, and go to state 5
    BOOL      shift, and go to state 6
    FUNCTION  shift, and go to state 7
    CLASS     shift, and go to state 8
    INC       shift, and go to state 9
    DEC       shift, and go to state 10

    INT    [reduce using rule 61 (cfv)]
    FLOAT  [reduce using rule 61 (cfv)]

    type       go to state 12
    array      go to state 13
    arg3       go to state 14
    afirmatie  go to state 15
    cfv        go to state 43
    clasa      go to state 17
    functie    go to state 18
    var_glob   go to state 19


State 20

   55 afirmatie: ID ASSIGN • expr

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 47
    expr   go to state 48


State 21

   35 comparatie: LT •

    $default  reduce using rule 35 (comparatie)


State 22

   36 comparatie: GT •

    $default  reduce using rule 36 (comparatie)


State 23

   37 comparatie: LE •

    $default  reduce using rule 37 (comparatie)


State 24

   38 comparatie: GE •

    $default  reduce using rule 38 (comparatie)


State 25

   39 comparatie: EQ •

    $default  reduce using rule 39 (comparatie)


State 26

   40 comparatie: NE •

    $default  reduce using rule 40 (comparatie)


State 27

   27 arg3: ID INC •

    $default  reduce using rule 27 (arg3)


State 28

   28 arg3: ID DEC •

    $default  reduce using rule 28 (arg3)


State 29

   56 afirmatie: ID comparatie • expr

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 47
    expr   go to state 49


State 30

   48 afirmatie: STR ID • ASSIGN STRING
   51          | STR ID •

    ASSIGN  shift, and go to state 50

    $default  reduce using rule 51 (afirmatie)


State 31

   47 afirmatie: CHAR ID • ASSIGN CHARACTER
   50          | CHAR ID •

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 50 (afirmatie)


State 32

   52 afirmatie: BOOL ID • ASSIGN BOOL_VAL
   53          | BOOL ID •

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 53 (afirmatie)


State 33

   63 functie: FUNCTION ID • '(' ')' '{' bloc_functie '}'
   64        | FUNCTION ID • '(' param ')' '{' bloc_functie '}'

    '('  shift, and go to state 53


State 34

   62 clasa: CLASS ID • '{' bloc_clasa '}' ';'

    '{'  shift, and go to state 54


State 35

   29 arg3: INC ID •

    $default  reduce using rule 29 (arg3)


State 36

   30 arg3: DEC ID •

    $default  reduce using rule 30 (arg3)


State 37

    0 $accept: program $end •

    $default  accept


State 38

    5 array: type ID • '[' VAL ']'
   46 afirmatie: type ID • ASSIGN value
   49          | type ID •

    ASSIGN  shift, and go to state 55
    '['     shift, and go to state 56

    $default  reduce using rule 49 (afirmatie)


State 39

    1 program: cfv main • '(' ')' '{' bloc_instr '}'

    '('  shift, and go to state 57


State 40

    2 main: type • ID

    ID  shift, and go to state 58


State 41

   58 cfv: clasa cfv •

    $default  reduce using rule 58 (cfv)


State 42

   59 cfv: functie cfv •

    $default  reduce using rule 59 (cfv)


State 43

   60 cfv: var_glob cfv •

    $default  reduce using rule 60 (cfv)


State 44

   34 value: ID •

    $default  reduce using rule 34 (value)


State 45

   32 value: VAL •

    $default  reduce using rule 32 (value)


State 46

   33 value: FLOAT_VAL •

    $default  reduce using rule 33 (value)


State 47

   41 expr: value •

    $default  reduce using rule 41 (expr)


State 48

   42 expr: expr • ADD expr
   43     | expr • SUB expr
   44     | expr • MUL expr
   45     | expr • DIV expr
   55 afirmatie: ID ASSIGN expr •

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62

    $default  reduce using rule 55 (afirmatie)


State 49

   42 expr: expr • ADD expr
   43     | expr • SUB expr
   44     | expr • MUL expr
   45     | expr • DIV expr
   56 afirmatie: ID comparatie expr •

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62

    $default  reduce using rule 56 (afirmatie)


State 50

   48 afirmatie: STR ID ASSIGN • STRING

    STRING  shift, and go to state 63


State 51

   47 afirmatie: CHAR ID ASSIGN • CHARACTER

    CHARACTER  shift, and go to state 64


State 52

   52 afirmatie: BOOL ID ASSIGN • BOOL_VAL

    BOOL_VAL  shift, and go to state 65


State 53

   63 functie: FUNCTION ID '(' • ')' '{' bloc_functie '}'
   64        | FUNCTION ID '(' • param ')' '{' bloc_functie '}'

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    ')'    shift, and go to state 66

    type   go to state 67
    param  go to state 68


State 54

   62 clasa: CLASS ID '{' • bloc_clasa '}' ';'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 74
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78
    bloc_clasa  go to state 79


State 55

   46 afirmatie: type ID ASSIGN • value

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 80


State 56

    5 array: type ID '[' • VAL ']'

    VAL  shift, and go to state 81


State 57

    1 program: cfv main '(' • ')' '{' bloc_instr '}'

    ')'  shift, and go to state 82


State 58

    2 main: type ID •

    $default  reduce using rule 2 (main)


State 59

   42 expr: expr ADD • expr

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 47
    expr   go to state 83


State 60

   43 expr: expr SUB • expr

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 47
    expr   go to state 84


State 61

   44 expr: expr MUL • expr

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 47
    expr   go to state 85


State 62

   45 expr: expr DIV • expr

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 47
    expr   go to state 86


State 63

   48 afirmatie: STR ID ASSIGN STRING •

    $default  reduce using rule 48 (afirmatie)


State 64

   47 afirmatie: CHAR ID ASSIGN CHARACTER •

    $default  reduce using rule 47 (afirmatie)


State 65

   52 afirmatie: BOOL ID ASSIGN BOOL_VAL •

    $default  reduce using rule 52 (afirmatie)


State 66

   63 functie: FUNCTION ID '(' ')' • '{' bloc_functie '}'

    '{'  shift, and go to state 87


State 67

   65 param: type • ID ',' param
   66      | type •

    ID  shift, and go to state 88

    $default  reduce using rule 66 (param)


State 68

   64 functie: FUNCTION ID '(' param • ')' '{' bloc_functie '}'

    ')'  shift, and go to state 89


State 69

   15 bloc_instr: EVAL • '(' ID ')' ';'
   19           | EVAL • '(' ID ')' ';' $@2 bloc_instr

    '('  shift, and go to state 90


State 70

   14 bloc_instr: TYPEOF • '(' ID ')' ';'
   17           | TYPEOF • '(' ID ')' ';' $@1 bloc_instr

    '('  shift, and go to state 91


State 71

   20 if: IF • '(' conditie ')' '{' bloc_instr '}'
   21   | IF • '(' conditie ')' '{' bloc_instr '}' ELSE '{' bloc_instr '}'

    '('  shift, and go to state 92


State 72

   23 for: FOR • '(' arg1 ';' arg2 ';' arg3 ')' '{' bloc_instr '}'

    '('  shift, and go to state 93


State 73

   22 while: WHILE • '(' conditie ')' '{' bloc_instr '}'

    '('  shift, and go to state 94


State 74

   68 bloc_clasa: bloc_instr •

    $default  reduce using rule 68 (bloc_clasa)


State 75

    6 bloc_instr: if •
   10           | if • bloc_instr

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    $default  reduce using rule 6 (bloc_instr)

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 95
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 76

    7 bloc_instr: while •
   11           | while • bloc_instr

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    $default  reduce using rule 7 (bloc_instr)

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 96
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 77

    8 bloc_instr: for •
   12           | for • bloc_instr

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    $default  reduce using rule 8 (bloc_instr)

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 97
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 78

    9 bloc_instr: afirmatie • ';'
   13           | afirmatie • ';' bloc_instr

    ';'  shift, and go to state 98


State 79

   62 clasa: CLASS ID '{' bloc_clasa • '}' ';'

    '}'  shift, and go to state 99


State 80

   46 afirmatie: type ID ASSIGN value •

    $default  reduce using rule 46 (afirmatie)


State 81

    5 array: type ID '[' VAL • ']'

    ']'  shift, and go to state 100


State 82

    1 program: cfv main '(' ')' • '{' bloc_instr '}'

    '{'  shift, and go to state 101


State 83

   42 expr: expr • ADD expr
   42     | expr ADD expr •
   43     | expr • SUB expr
   44     | expr • MUL expr
   45     | expr • DIV expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62

    $default  reduce using rule 42 (expr)


State 84

   42 expr: expr • ADD expr
   43     | expr • SUB expr
   43     | expr SUB expr •
   44     | expr • MUL expr
   45     | expr • DIV expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62

    $default  reduce using rule 43 (expr)


State 85

   42 expr: expr • ADD expr
   43     | expr • SUB expr
   44     | expr • MUL expr
   44     | expr MUL expr •
   45     | expr • DIV expr

    $default  reduce using rule 44 (expr)


State 86

   42 expr: expr • ADD expr
   43     | expr • SUB expr
   44     | expr • MUL expr
   45     | expr • DIV expr
   45     | expr DIV expr •

    $default  reduce using rule 45 (expr)


State 87

   63 functie: FUNCTION ID '(' ')' '{' • bloc_functie '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type          go to state 12
    array         go to state 13
    bloc_instr    go to state 102
    if            go to state 75
    while         go to state 76
    for           go to state 77
    arg3          go to state 14
    afirmatie     go to state 78
    bloc_functie  go to state 103


State 88

   65 param: type ID • ',' param

    ','  shift, and go to state 104


State 89

   64 functie: FUNCTION ID '(' param ')' • '{' bloc_functie '}'

    '{'  shift, and go to state 105


State 90

   15 bloc_instr: EVAL '(' • ID ')' ';'
   19           | EVAL '(' • ID ')' ';' $@2 bloc_instr

    ID  shift, and go to state 106


State 91

   14 bloc_instr: TYPEOF '(' • ID ')' ';'
   17           | TYPEOF '(' • ID ')' ';' $@1 bloc_instr

    ID  shift, and go to state 107


State 92

   20 if: IF '(' • conditie ')' '{' bloc_instr '}'
   21   | IF '(' • conditie ')' '{' bloc_instr '}' ELSE '{' bloc_instr '}'

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    conditie  go to state 108
    value     go to state 109


State 93

   23 for: FOR '(' • arg1 ';' arg2 ';' arg3 ')' '{' bloc_instr '}'

    ID     shift, and go to state 110
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3

    type  go to state 111
    arg1  go to state 112


State 94

   22 while: WHILE '(' • conditie ')' '{' bloc_instr '}'

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    conditie  go to state 113
    value     go to state 109


State 95

   10 bloc_instr: if bloc_instr •

    $default  reduce using rule 10 (bloc_instr)


State 96

   11 bloc_instr: while bloc_instr •

    $default  reduce using rule 11 (bloc_instr)


State 97

   12 bloc_instr: for bloc_instr •

    $default  reduce using rule 12 (bloc_instr)


State 98

    9 bloc_instr: afirmatie ';' •
   13           | afirmatie ';' • bloc_instr

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    $default  reduce using rule 9 (bloc_instr)

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 114
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 99

   62 clasa: CLASS ID '{' bloc_clasa '}' • ';'

    ';'  shift, and go to state 115


State 100

    5 array: type ID '[' VAL ']' •

    $default  reduce using rule 5 (array)


State 101

    1 program: cfv main '(' ')' '{' • bloc_instr '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 116
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 102

   69 bloc_functie: bloc_instr •

    $default  reduce using rule 69 (bloc_functie)


State 103

   63 functie: FUNCTION ID '(' ')' '{' bloc_functie • '}'

    '}'  shift, and go to state 117


State 104

   65 param: type ID ',' • param

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3

    type   go to state 67
    param  go to state 118


State 105

   64 functie: FUNCTION ID '(' param ')' '{' • bloc_functie '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type          go to state 12
    array         go to state 13
    bloc_instr    go to state 102
    if            go to state 75
    while         go to state 76
    for           go to state 77
    arg3          go to state 14
    afirmatie     go to state 78
    bloc_functie  go to state 119


State 106

   15 bloc_instr: EVAL '(' ID • ')' ';'
   19           | EVAL '(' ID • ')' ';' $@2 bloc_instr

    ')'  shift, and go to state 120


State 107

   14 bloc_instr: TYPEOF '(' ID • ')' ';'
   17           | TYPEOF '(' ID • ')' ';' $@1 bloc_instr

    ')'  shift, and go to state 121


State 108

   20 if: IF '(' conditie • ')' '{' bloc_instr '}'
   21   | IF '(' conditie • ')' '{' bloc_instr '}' ELSE '{' bloc_instr '}'

    ')'  shift, and go to state 122


State 109

   31 conditie: value • comparatie value

    LT  shift, and go to state 21
    GT  shift, and go to state 22
    LE  shift, and go to state 23
    GE  shift, and go to state 24
    EQ  shift, and go to state 25
    NE  shift, and go to state 26

    comparatie  go to state 123


State 110

   25 arg1: ID • ASSIGN value

    ASSIGN  shift, and go to state 124


State 111

   24 arg1: type • ID ASSIGN value

    ID  shift, and go to state 125


State 112

   23 for: FOR '(' arg1 • ';' arg2 ';' arg3 ')' '{' bloc_instr '}'

    ';'  shift, and go to state 126


State 113

   22 while: WHILE '(' conditie • ')' '{' bloc_instr '}'

    ')'  shift, and go to state 127


State 114

   13 bloc_instr: afirmatie ';' bloc_instr •

    $default  reduce using rule 13 (bloc_instr)


State 115

   62 clasa: CLASS ID '{' bloc_clasa '}' ';' •

    $default  reduce using rule 62 (clasa)


State 116

    1 program: cfv main '(' ')' '{' bloc_instr • '}'

    '}'  shift, and go to state 128


State 117

   63 functie: FUNCTION ID '(' ')' '{' bloc_functie '}' •

    $default  reduce using rule 63 (functie)


State 118

   65 param: type ID ',' param •

    $default  reduce using rule 65 (param)


State 119

   64 functie: FUNCTION ID '(' param ')' '{' bloc_functie • '}'

    '}'  shift, and go to state 129


State 120

   15 bloc_instr: EVAL '(' ID ')' • ';'
   19           | EVAL '(' ID ')' • ';' $@2 bloc_instr

    ';'  shift, and go to state 130


State 121

   14 bloc_instr: TYPEOF '(' ID ')' • ';'
   17           | TYPEOF '(' ID ')' • ';' $@1 bloc_instr

    ';'  shift, and go to state 131


State 122

   20 if: IF '(' conditie ')' • '{' bloc_instr '}'
   21   | IF '(' conditie ')' • '{' bloc_instr '}' ELSE '{' bloc_instr '}'

    '{'  shift, and go to state 132


State 123

   31 conditie: value comparatie • value

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 133


State 124

   25 arg1: ID ASSIGN • value

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 134


State 125

   24 arg1: type ID • ASSIGN value

    ASSIGN  shift, and go to state 135


State 126

   23 for: FOR '(' arg1 ';' • arg2 ';' arg3 ')' '{' bloc_instr '}'

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    arg2      go to state 136
    conditie  go to state 137
    value     go to state 109


State 127

   22 while: WHILE '(' conditie ')' • '{' bloc_instr '}'

    '{'  shift, and go to state 138


State 128

    1 program: cfv main '(' ')' '{' bloc_instr '}' •

    $default  reduce using rule 1 (program)


State 129

   64 functie: FUNCTION ID '(' param ')' '{' bloc_functie '}' •

    $default  reduce using rule 64 (functie)


State 130

   15 bloc_instr: EVAL '(' ID ')' ';' •
   19           | EVAL '(' ID ')' ';' • $@2 bloc_instr

    '}'       reduce using rule 15 (bloc_instr)
    $default  reduce using rule 18 ($@2)

    $@2  go to state 139


State 131

   14 bloc_instr: TYPEOF '(' ID ')' ';' •
   17           | TYPEOF '(' ID ')' ';' • $@1 bloc_instr

    '}'       reduce using rule 14 (bloc_instr)
    $default  reduce using rule 16 ($@1)

    $@1  go to state 140


State 132

   20 if: IF '(' conditie ')' '{' • bloc_instr '}'
   21   | IF '(' conditie ')' '{' • bloc_instr '}' ELSE '{' bloc_instr '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 141
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 133

   31 conditie: value comparatie value •

    $default  reduce using rule 31 (conditie)


State 134

   25 arg1: ID ASSIGN value •

    $default  reduce using rule 25 (arg1)


State 135

   24 arg1: type ID ASSIGN • value

    ID         shift, and go to state 44
    VAL        shift, and go to state 45
    FLOAT_VAL  shift, and go to state 46

    value  go to state 142


State 136

   23 for: FOR '(' arg1 ';' arg2 • ';' arg3 ')' '{' bloc_instr '}'

    ';'  shift, and go to state 143


State 137

   26 arg2: conditie •

    $default  reduce using rule 26 (arg2)


State 138

   22 while: WHILE '(' conditie ')' '{' • bloc_instr '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 144
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 139

   19 bloc_instr: EVAL '(' ID ')' ';' $@2 • bloc_instr

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 145
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 140

   17 bloc_instr: TYPEOF '(' ID ')' ';' $@1 • bloc_instr

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 146
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 141

   20 if: IF '(' conditie ')' '{' bloc_instr • '}'
   21   | IF '(' conditie ')' '{' bloc_instr • '}' ELSE '{' bloc_instr '}'

    '}'  shift, and go to state 147


State 142

   24 arg1: type ID ASSIGN value •

    $default  reduce using rule 24 (arg1)


State 143

   23 for: FOR '(' arg1 ';' arg2 ';' • arg3 ')' '{' bloc_instr '}'

    ID   shift, and go to state 148
    INC  shift, and go to state 9
    DEC  shift, and go to state 10

    arg3  go to state 149


State 144

   22 while: WHILE '(' conditie ')' '{' bloc_instr • '}'

    '}'  shift, and go to state 150


State 145

   19 bloc_instr: EVAL '(' ID ')' ';' $@2 bloc_instr •

    $default  reduce using rule 19 (bloc_instr)


State 146

   17 bloc_instr: TYPEOF '(' ID ')' ';' $@1 bloc_instr •

    $default  reduce using rule 17 (bloc_instr)


State 147

   20 if: IF '(' conditie ')' '{' bloc_instr '}' •
   21   | IF '(' conditie ')' '{' bloc_instr '}' • ELSE '{' bloc_instr '}'

    ELSE  shift, and go to state 151

    $default  reduce using rule 20 (if)


State 148

   27 arg3: ID • INC
   28     | ID • DEC

    INC  shift, and go to state 27
    DEC  shift, and go to state 28


State 149

   23 for: FOR '(' arg1 ';' arg2 ';' arg3 • ')' '{' bloc_instr '}'

    ')'  shift, and go to state 152


State 150

   22 while: WHILE '(' conditie ')' '{' bloc_instr '}' •

    $default  reduce using rule 22 (while)


State 151

   21 if: IF '(' conditie ')' '{' bloc_instr '}' ELSE • '{' bloc_instr '}'

    '{'  shift, and go to state 153


State 152

   23 for: FOR '(' arg1 ';' arg2 ';' arg3 ')' • '{' bloc_instr '}'

    '{'  shift, and go to state 154


State 153

   21 if: IF '(' conditie ')' '{' bloc_instr '}' ELSE '{' • bloc_instr '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 155
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 154

   23 for: FOR '(' arg1 ';' arg2 ';' arg3 ')' '{' • bloc_instr '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STR     shift, and go to state 4
    CHAR    shift, and go to state 5
    BOOL    shift, and go to state 6
    EVAL    shift, and go to state 69
    TYPEOF  shift, and go to state 70
    IF      shift, and go to state 71
    FOR     shift, and go to state 72
    WHILE   shift, and go to state 73
    INC     shift, and go to state 9
    DEC     shift, and go to state 10

    type        go to state 12
    array       go to state 13
    bloc_instr  go to state 156
    if          go to state 75
    while       go to state 76
    for         go to state 77
    arg3        go to state 14
    afirmatie   go to state 78


State 155

   21 if: IF '(' conditie ')' '{' bloc_instr '}' ELSE '{' bloc_instr • '}'

    '}'  shift, and go to state 157


State 156

   23 for: FOR '(' arg1 ';' arg2 ';' arg3 ')' '{' bloc_instr • '}'

    '}'  shift, and go to state 158


State 157

   21 if: IF '(' conditie ')' '{' bloc_instr '}' ELSE '{' bloc_instr '}' •

    $default  reduce using rule 21 (if)


State 158

   23 for: FOR '(' arg1 ';' arg2 ';' arg3 ')' '{' bloc_instr '}' •

    $default  reduce using rule 23 (for)
